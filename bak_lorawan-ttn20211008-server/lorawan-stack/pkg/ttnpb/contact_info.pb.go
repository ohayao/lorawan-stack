// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/contact_info.proto

package ttnpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ContactType int32

const (
	CONTACT_TYPE_OTHER     ContactType = 0
	CONTACT_TYPE_ABUSE     ContactType = 1
	CONTACT_TYPE_BILLING   ContactType = 2
	CONTACT_TYPE_TECHNICAL ContactType = 3
)

var ContactType_name = map[int32]string{
	0: "CONTACT_TYPE_OTHER",
	1: "CONTACT_TYPE_ABUSE",
	2: "CONTACT_TYPE_BILLING",
	3: "CONTACT_TYPE_TECHNICAL",
}

var ContactType_value = map[string]int32{
	"CONTACT_TYPE_OTHER":     0,
	"CONTACT_TYPE_ABUSE":     1,
	"CONTACT_TYPE_BILLING":   2,
	"CONTACT_TYPE_TECHNICAL": 3,
}

func (ContactType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3baa36b7c4d52524, []int{0}
}

type ContactMethod int32

const (
	CONTACT_METHOD_OTHER ContactMethod = 0
	CONTACT_METHOD_EMAIL ContactMethod = 1
	CONTACT_METHOD_PHONE ContactMethod = 2
)

var ContactMethod_name = map[int32]string{
	0: "CONTACT_METHOD_OTHER",
	1: "CONTACT_METHOD_EMAIL",
	2: "CONTACT_METHOD_PHONE",
}

var ContactMethod_value = map[string]int32{
	"CONTACT_METHOD_OTHER": 0,
	"CONTACT_METHOD_EMAIL": 1,
	"CONTACT_METHOD_PHONE": 2,
}

func (ContactMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3baa36b7c4d52524, []int{1}
}

type ContactInfo struct {
	ContactType          ContactType   `protobuf:"varint,1,opt,name=contact_type,json=contactType,proto3,enum=ttn.lorawan.v3.ContactType" json:"contact_type,omitempty"`
	ContactMethod        ContactMethod `protobuf:"varint,2,opt,name=contact_method,json=contactMethod,proto3,enum=ttn.lorawan.v3.ContactMethod" json:"contact_method,omitempty"`
	Value                string        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Public               bool          `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	ValidatedAt          *time.Time    `protobuf:"bytes,5,opt,name=validated_at,json=validatedAt,proto3,stdtime" json:"validated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ContactInfo) Reset()      { *m = ContactInfo{} }
func (*ContactInfo) ProtoMessage() {}
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3baa36b7c4d52524, []int{0}
}
func (m *ContactInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactInfo.Unmarshal(m, b)
}
func (m *ContactInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactInfo.Marshal(b, m, deterministic)
}
func (m *ContactInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactInfo.Merge(m, src)
}
func (m *ContactInfo) XXX_Size() int {
	return xxx_messageInfo_ContactInfo.Size(m)
}
func (m *ContactInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContactInfo proto.InternalMessageInfo

func (m *ContactInfo) GetContactType() ContactType {
	if m != nil {
		return m.ContactType
	}
	return CONTACT_TYPE_OTHER
}

func (m *ContactInfo) GetContactMethod() ContactMethod {
	if m != nil {
		return m.ContactMethod
	}
	return CONTACT_METHOD_OTHER
}

func (m *ContactInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ContactInfo) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *ContactInfo) GetValidatedAt() *time.Time {
	if m != nil {
		return m.ValidatedAt
	}
	return nil
}

type ContactInfoValidation struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string             `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Entity               *EntityIdentifiers `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	ContactInfo          []*ContactInfo     `protobuf:"bytes,4,rep,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	CreatedAt            *time.Time         `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	ExpiresAt            *time.Time         `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3,stdtime" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ContactInfoValidation) Reset()      { *m = ContactInfoValidation{} }
func (*ContactInfoValidation) ProtoMessage() {}
func (*ContactInfoValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3baa36b7c4d52524, []int{1}
}
func (m *ContactInfoValidation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactInfoValidation.Unmarshal(m, b)
}
func (m *ContactInfoValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactInfoValidation.Marshal(b, m, deterministic)
}
func (m *ContactInfoValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactInfoValidation.Merge(m, src)
}
func (m *ContactInfoValidation) XXX_Size() int {
	return xxx_messageInfo_ContactInfoValidation.Size(m)
}
func (m *ContactInfoValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactInfoValidation.DiscardUnknown(m)
}

var xxx_messageInfo_ContactInfoValidation proto.InternalMessageInfo

func (m *ContactInfoValidation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContactInfoValidation) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ContactInfoValidation) GetEntity() *EntityIdentifiers {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ContactInfoValidation) GetContactInfo() []*ContactInfo {
	if m != nil {
		return m.ContactInfo
	}
	return nil
}

func (m *ContactInfoValidation) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ContactInfoValidation) GetExpiresAt() *time.Time {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.ContactType", ContactType_name, ContactType_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.ContactType", ContactType_name, ContactType_value)
	proto.RegisterEnum("ttn.lorawan.v3.ContactMethod", ContactMethod_name, ContactMethod_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.ContactMethod", ContactMethod_name, ContactMethod_value)
	proto.RegisterType((*ContactInfo)(nil), "ttn.lorawan.v3.ContactInfo")
	golang_proto.RegisterType((*ContactInfo)(nil), "ttn.lorawan.v3.ContactInfo")
	proto.RegisterType((*ContactInfoValidation)(nil), "ttn.lorawan.v3.ContactInfoValidation")
	golang_proto.RegisterType((*ContactInfoValidation)(nil), "ttn.lorawan.v3.ContactInfoValidation")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/contact_info.proto", fileDescriptor_3baa36b7c4d52524)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/contact_info.proto", fileDescriptor_3baa36b7c4d52524)
}

var fileDescriptor_3baa36b7c4d52524 = []byte{
	// 733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xd3, 0x58,
	0x14, 0x8d, 0x9d, 0x8f, 0x69, 0x5f, 0xda, 0x2a, 0xe3, 0x99, 0xc9, 0x58, 0xee, 0xd4, 0xcd, 0x64,
	0x06, 0x29, 0xaa, 0x14, 0x5b, 0x4a, 0x57, 0x6c, 0x00, 0x3b, 0x58, 0x24, 0x52, 0x3e, 0x2a, 0x63,
	0x90, 0x60, 0x13, 0x39, 0xce, 0x8b, 0xf3, 0x94, 0xe4, 0x3d, 0xe3, 0xbc, 0xa4, 0xf5, 0x8a, 0xaa,
	0x6c, 0x58, 0x56, 0xe2, 0x27, 0xc0, 0x82, 0x9f, 0xc1, 0x0f, 0x60, 0xc7, 0x86, 0x1d, 0x22, 0x65,
	0xc1, 0x92, 0x75, 0x57, 0x28, 0xb6, 0x93, 0x38, 0x8d, 0x0a, 0x65, 0xe7, 0x77, 0xcf, 0xbd, 0xe7,
	0x5e, 0x9f, 0x73, 0x75, 0xc1, 0xff, 0x03, 0xe2, 0x9a, 0xc7, 0x26, 0x2e, 0x8e, 0xa8, 0x69, 0xf5,
	0x65, 0xd3, 0x41, 0xb2, 0x45, 0x30, 0x35, 0x2d, 0xda, 0x42, 0xb8, 0x4b, 0x24, 0xc7, 0x25, 0x94,
	0x70, 0x3b, 0x94, 0x62, 0x29, 0xcc, 0x94, 0x26, 0x87, 0x82, 0x62, 0x23, 0xda, 0x1b, 0xb7, 0x25,
	0x8b, 0x0c, 0x65, 0x88, 0x27, 0xc4, 0x73, 0x5c, 0x72, 0xe2, 0xc9, 0x7e, 0xb2, 0x55, 0xb4, 0x21,
	0x2e, 0x4e, 0xcc, 0x01, 0xea, 0x98, 0x14, 0xca, 0x6b, 0x1f, 0x01, 0xa5, 0x50, 0x8c, 0x50, 0xd8,
	0xc4, 0x26, 0x41, 0x71, 0x7b, 0xdc, 0xf5, 0x5f, 0xfe, 0xc3, 0xff, 0x0a, 0xd3, 0xff, 0xb1, 0x09,
	0xb1, 0x07, 0xd0, 0x1f, 0xd0, 0xc4, 0x98, 0x50, 0x93, 0x22, 0x82, 0x47, 0x21, 0xba, 0x1b, 0xa2,
	0x0b, 0x0e, 0x38, 0x74, 0xa8, 0x17, 0x82, 0xfb, 0x57, 0x41, 0x8a, 0x86, 0x70, 0x44, 0xcd, 0xa1,
	0x13, 0x26, 0xfc, 0xb7, 0xae, 0x01, 0xea, 0x40, 0x4c, 0x51, 0x17, 0x41, 0x37, 0x6c, 0x91, 0x7f,
	0xc3, 0x82, 0x74, 0x39, 0x50, 0xa6, 0x8a, 0xbb, 0x84, 0xab, 0x80, 0xad, 0xb9, 0x50, 0xd4, 0x73,
	0x20, 0xcf, 0xe4, 0x98, 0xc2, 0x4e, 0x69, 0x57, 0x5a, 0x55, 0x4a, 0x0a, 0x4b, 0x0c, 0xcf, 0x81,
	0xea, 0xc6, 0xa5, 0x9a, 0x3c, 0x63, 0xd8, 0x0c, 0xa3, 0xa7, 0xad, 0x65, 0x98, 0x6b, 0x80, 0x9d,
	0x39, 0xd3, 0x10, 0xd2, 0x1e, 0xe9, 0xf0, 0xac, 0xcf, 0xb5, 0x77, 0x0d, 0x57, 0xdd, 0x4f, 0x8a,
	0xb0, 0x6d, 0x5b, 0x51, 0x80, 0x13, 0x41, 0x72, 0x62, 0x0e, 0xc6, 0x90, 0x8f, 0xe7, 0x98, 0xc2,
	0xa6, 0x9f, 0xe7, 0xc6, 0xf9, 0x53, 0x56, 0x0f, 0xc2, 0x5c, 0x16, 0xa4, 0x9c, 0x71, 0x7b, 0x80,
	0x2c, 0x3e, 0x91, 0x63, 0x0a, 0x1b, 0x7a, 0xf8, 0xe2, 0xca, 0x60, 0x6b, 0xee, 0x51, 0xa7, 0x65,
	0x52, 0x3e, 0x99, 0x63, 0x0a, 0xe9, 0x92, 0x20, 0x05, 0xf2, 0x49, 0x73, 0xf9, 0x24, 0x63, 0x2e,
	0x9f, 0x9a, 0x38, 0xff, 0xb4, 0xcf, 0xe8, 0xe9, 0x45, 0x95, 0x42, 0xf3, 0xef, 0x59, 0xf0, 0x57,
	0x44, 0xa6, 0xc7, 0x01, 0x84, 0x08, 0xe6, 0xfe, 0x06, 0x2c, 0xea, 0xf8, 0x32, 0x6d, 0xaa, 0xbf,
	0x5d, 0xaa, 0x09, 0x97, 0xe5, 0xef, 0xe9, 0x2c, 0xea, 0x70, 0x7b, 0x20, 0x49, 0x49, 0x1f, 0x62,
	0xff, 0xb7, 0x23, 0x58, 0x10, 0xe5, 0x6e, 0x83, 0xd4, 0xcc, 0x0b, 0xea, 0xf9, 0xff, 0x93, 0x2e,
	0xfd, 0x7b, 0x55, 0x16, 0xcd, 0x47, 0xab, 0x4b, 0xc7, 0xf4, 0xb0, 0x80, 0xbb, 0xb3, 0xf4, 0x68,
	0xb6, 0xcc, 0x7c, 0x22, 0x17, 0x2f, 0xa4, 0xaf, 0xf5, 0x68, 0x36, 0xef, 0xc2, 0x19, 0xdf, 0xe3,
	0xbb, 0x00, 0x58, 0x2e, 0xfc, 0x55, 0x3d, 0x36, 0xc3, 0x1a, 0x85, 0xce, 0x08, 0xe0, 0x89, 0x83,
	0x5c, 0x38, 0x9a, 0x11, 0xa4, 0x6e, 0x4a, 0x10, 0xd6, 0x28, 0xf4, 0xc0, 0x5b, 0x2c, 0x9d, 0xbf,
	0x2a, 0x59, 0xc0, 0x95, 0x9b, 0x0d, 0x43, 0x29, 0x1b, 0x2d, 0xe3, 0xc9, 0x91, 0xd6, 0x6a, 0x1a,
	0x15, 0x4d, 0xcf, 0xc4, 0xd6, 0xe2, 0x8a, 0xfa, 0xe8, 0xa1, 0x96, 0x61, 0x38, 0x1e, 0xfc, 0xb9,
	0x12, 0x57, 0xab, 0xb5, 0x5a, 0xb5, 0xf1, 0x20, 0xc3, 0x72, 0x02, 0xc8, 0xae, 0x20, 0x86, 0x56,
	0xae, 0x34, 0xaa, 0x65, 0xa5, 0x96, 0x89, 0x0b, 0x89, 0x97, 0xaf, 0xc5, 0xd8, 0x81, 0x05, 0xb6,
	0x57, 0x16, 0x2e, 0x4a, 0x56, 0xd7, 0x8c, 0x4a, 0xf3, 0xfe, 0xa2, 0xfd, 0x3a, 0xa2, 0xd5, 0x95,
	0x6a, 0x6d, 0x75, 0x80, 0x10, 0x39, 0xaa, 0x34, 0x1b, 0x5a, 0x86, 0x0d, 0x9a, 0x94, 0x5e, 0xb0,
	0xe0, 0x8f, 0xa8, 0xfc, 0xd0, 0x46, 0x23, 0xea, 0x7a, 0xdc, 0x73, 0xf0, 0xbb, 0x0e, 0x9f, 0x8d,
	0xe1, 0x88, 0x46, 0x36, 0xe8, 0xe7, 0xce, 0x0b, 0xb7, 0x7e, 0xe0, 0xed, 0x92, 0x29, 0x9f, 0x3b,
	0xfb, 0xf0, 0xe5, 0x15, 0x2b, 0xe4, 0xf9, 0x95, 0x63, 0x37, 0x3f, 0x51, 0xb3, 0x5e, 0x7d, 0xb0,
	0x11, 0xe6, 0x43, 0xee, 0x66, 0xa4, 0x42, 0x76, 0xcd, 0x58, 0x6d, 0x76, 0x85, 0xe6, 0xcd, 0x4a,
	0xd7, 0x36, 0x53, 0xeb, 0x1f, 0x3f, 0x8b, 0xb1, 0xd3, 0xa9, 0xc8, 0xbc, 0x9d, 0x8a, 0xcc, 0xd7,
	0xa9, 0x18, 0xfb, 0x36, 0x15, 0x99, 0xf3, 0x0b, 0x31, 0xf6, 0xee, 0x42, 0x64, 0x9e, 0xca, 0x36,
	0x91, 0x68, 0x0f, 0xd2, 0x1e, 0xc2, 0xf6, 0x48, 0xc2, 0x90, 0x1e, 0x13, 0xb7, 0x2f, 0xaf, 0xde,
	0xac, 0xc9, 0xa1, 0xec, 0xf4, 0x6d, 0x99, 0x52, 0xec, 0xb4, 0xdb, 0x29, 0x7f, 0x80, 0xc3, 0xef,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xed, 0xa6, 0x02, 0xfc, 0xdc, 0x05, 0x00, 0x00,
}

func (x ContactType) String() string {
	s, ok := ContactType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ContactMethod) String() string {
	s, ok := ContactMethod_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *ContactInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ContactInfo)
	if !ok {
		that2, ok := that.(ContactInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ContactType != that1.ContactType {
		return false
	}
	if this.ContactMethod != that1.ContactMethod {
		return false
	}
	if this.Value != that1.Value {
		return false
	}
	if this.Public != that1.Public {
		return false
	}
	if that1.ValidatedAt == nil {
		if this.ValidatedAt != nil {
			return false
		}
	} else if !this.ValidatedAt.Equal(*that1.ValidatedAt) {
		return false
	}
	return true
}
func (this *ContactInfoValidation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ContactInfoValidation)
	if !ok {
		that2, ok := that.(ContactInfoValidation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Token != that1.Token {
		return false
	}
	if !this.Entity.Equal(that1.Entity) {
		return false
	}
	if len(this.ContactInfo) != len(that1.ContactInfo) {
		return false
	}
	for i := range this.ContactInfo {
		if !this.ContactInfo[i].Equal(that1.ContactInfo[i]) {
			return false
		}
	}
	if that1.CreatedAt == nil {
		if this.CreatedAt != nil {
			return false
		}
	} else if !this.CreatedAt.Equal(*that1.CreatedAt) {
		return false
	}
	if that1.ExpiresAt == nil {
		if this.ExpiresAt != nil {
			return false
		}
	} else if !this.ExpiresAt.Equal(*that1.ExpiresAt) {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContactInfoRegistryClient is the client API for ContactInfoRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactInfoRegistryClient interface {
	// Request validation for the non-validated contact info for the given entity.
	RequestValidation(ctx context.Context, in *EntityIdentifiers, opts ...grpc.CallOption) (*ContactInfoValidation, error)
	// Validate confirms a contact info validation.
	Validate(ctx context.Context, in *ContactInfoValidation, opts ...grpc.CallOption) (*types.Empty, error)
}

type contactInfoRegistryClient struct {
	cc *grpc.ClientConn
}

func NewContactInfoRegistryClient(cc *grpc.ClientConn) ContactInfoRegistryClient {
	return &contactInfoRegistryClient{cc}
}

func (c *contactInfoRegistryClient) RequestValidation(ctx context.Context, in *EntityIdentifiers, opts ...grpc.CallOption) (*ContactInfoValidation, error) {
	out := new(ContactInfoValidation)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.ContactInfoRegistry/RequestValidation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactInfoRegistryClient) Validate(ctx context.Context, in *ContactInfoValidation, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.ContactInfoRegistry/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactInfoRegistryServer is the server API for ContactInfoRegistry service.
type ContactInfoRegistryServer interface {
	// Request validation for the non-validated contact info for the given entity.
	RequestValidation(context.Context, *EntityIdentifiers) (*ContactInfoValidation, error)
	// Validate confirms a contact info validation.
	Validate(context.Context, *ContactInfoValidation) (*types.Empty, error)
}

// UnimplementedContactInfoRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedContactInfoRegistryServer struct {
}

func (*UnimplementedContactInfoRegistryServer) RequestValidation(ctx context.Context, req *EntityIdentifiers) (*ContactInfoValidation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestValidation not implemented")
}
func (*UnimplementedContactInfoRegistryServer) Validate(ctx context.Context, req *ContactInfoValidation) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}

func RegisterContactInfoRegistryServer(s *grpc.Server, srv ContactInfoRegistryServer) {
	s.RegisterService(&_ContactInfoRegistry_serviceDesc, srv)
}

func _ContactInfoRegistry_RequestValidation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityIdentifiers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactInfoRegistryServer).RequestValidation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.ContactInfoRegistry/RequestValidation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactInfoRegistryServer).RequestValidation(ctx, req.(*EntityIdentifiers))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactInfoRegistry_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactInfoValidation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactInfoRegistryServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.ContactInfoRegistry/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactInfoRegistryServer).Validate(ctx, req.(*ContactInfoValidation))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactInfoRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.lorawan.v3.ContactInfoRegistry",
	HandlerType: (*ContactInfoRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestValidation",
			Handler:    _ContactInfoRegistry_RequestValidation_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _ContactInfoRegistry_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/contact_info.proto",
}

func (this *ContactInfo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ContactInfo{`,
		`ContactType:` + fmt.Sprintf("%v", this.ContactType) + `,`,
		`ContactMethod:` + fmt.Sprintf("%v", this.ContactMethod) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`Public:` + fmt.Sprintf("%v", this.Public) + `,`,
		`ValidatedAt:` + strings.Replace(fmt.Sprintf("%v", this.ValidatedAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContactInfoValidation) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForContactInfo := "[]*ContactInfo{"
	for _, f := range this.ContactInfo {
		repeatedStringForContactInfo += strings.Replace(f.String(), "ContactInfo", "ContactInfo", 1) + ","
	}
	repeatedStringForContactInfo += "}"
	s := strings.Join([]string{`&ContactInfoValidation{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Token:` + fmt.Sprintf("%v", this.Token) + `,`,
		`Entity:` + strings.Replace(fmt.Sprintf("%v", this.Entity), "EntityIdentifiers", "EntityIdentifiers", 1) + `,`,
		`ContactInfo:` + repeatedStringForContactInfo + `,`,
		`CreatedAt:` + strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`ExpiresAt:` + strings.Replace(fmt.Sprintf("%v", this.ExpiresAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringContactInfo(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
